name: Trigger Publish

on:
  workflow_run:
    workflows: ["Autoversion and Changelog"]
    types:
      - completed

permissions:
  actions: write
  contents: read

jobs:
  trigger-publish:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag from the GitHub API with debugging
          echo "Fetching tags from GitHub API..."
          TAGS_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/tags)
          
          # Debug response
          echo "API Response length: $(echo $TAGS_RESPONSE | wc -c) bytes"
          echo "Response starts with: $(echo $TAGS_RESPONSE | head -c 100)..."
          
          # Check if response is valid JSON array
          IS_ARRAY=$(echo $TAGS_RESPONSE | jq 'if type=="array" then true else false end')
          if [ "$IS_ARRAY" != "true" ]; then
            echo "ERROR: GitHub API didn't return an array of tags"
            echo "Full response: $TAGS_RESPONSE"
            exit 1
          fi
          
          # Get array length
          ARRAY_LENGTH=$(echo $TAGS_RESPONSE | jq 'length')
          if [ "$ARRAY_LENGTH" -eq "0" ]; then
            echo "ERROR: No tags found in repository"
            exit 1
          fi
          
          # Now safely extract the tag
          TAG=$(echo $TAGS_RESPONSE | jq -r '.[0].name')
          echo "Latest tag is: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          
          # TEMPORARILY REMOVING TIME CHECK - ALWAYS CONSIDER TAG RECENT
          echo "IMPORTANT: Time check temporarily bypassed"
          echo "is_recent=true" >> $GITHUB_OUTPUT

      - name: Manual workflow dispatch
        if: steps.get_tag.outputs.is_recent == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = "${{ steps.get_tag.outputs.tag }}";
            
            console.log(`Triggering publish workflow for tag ${tag}`);
            
            try {
              const result = await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'publish.yml',
                ref: 'main',
                inputs: {
                  version: tag
                }
              });
              
              console.log(`Workflow dispatch result: ${JSON.stringify(result)}`);
              console.log(`âœ… Successfully triggered publish workflow for ${tag}`);
            } catch (error) {
              console.error(`Error triggering workflow: ${error.message}`);
              console.error(JSON.stringify(error));
              throw error;
            } 