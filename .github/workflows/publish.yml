name: Publish Package

on:
  push:
    tags:
      - "v*" # Runs when a new version tag (e.g., v1.0.0) is pushed

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Tag Information
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "Tag version: ${GITHUB_REF#refs/tags/v}"
          git tag -l

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
          scope: "@giof-se"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Set PNPM Store Path
        shell: bash
        run: |
          echo "STORE_PATH=$HOME/.pnpm-store" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Validate package version matches tag
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          
          echo "Package.json version: $PKG_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "::error::Package version ($PKG_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          
          echo "âœ… Version validation successful: $TAG_VERSION"

      - name: Install Dependencies
        run: pnpm install --store-dir=${{ env.STORE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Package
        run: pnpm run build

      - name: Setup Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Publish Package
        run: |
          echo "Publishing package version $(node -p "require('./package.json').version")"
          # Create .npmrc using the auto-generated GitHub token
          cat > .npmrc << EOF
          @giof-se:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${{ github.token }}
          EOF
          cat .npmrc
          pnpm publish --no-git-checks --access restricted
        env:
          # Use the auto-generated token for authentication
          NODE_AUTH_TOKEN: ${{ github.token }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}